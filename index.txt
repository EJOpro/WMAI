/* Main */

position: relative;
width: 1440px;
height: 1024px;

background: #FFFFFF;


/* 001 1 */

position: absolute;
width: 417px;
height: 135px;
left: 511px;
top: 191px;

background: url(001.png);


/* Menu - Icon button Example

This is an example of the Menu in use. Menus display a list of choices on a temporary surface. They appear when users interact with a button, action, or other control. 

🛠 Additional options 
Menu list item - can be edited by selecting individual list item and  selecting wether it is enabled, selected, and has a divider from the variant properties. 
*/

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

position: absolute;
width: 200px;
height: 288px;
left: 48px;
top: 368px;



/* Icon button

<p>Default icon buttons can open other elements, like a menu or search.</p><p><br></p><ol><li value="1" data-list="bullet">Icon buttons must use a system icon with a clear meaning</li><li value="2" data-list="bullet">Many configurations: Color, size, width, and shape</li><li value="3" data-list="bullet">On&nbsp;web, display a&nbsp;tooltip describing the action when hovering</li></ol>

Standard Icon buttons are low-emphasis buttons.
They are used for the lowest priority actions, especially when presenting multiple options.

Icon buttons can be placed on a variety of backgrounds. Until the button is interacted with, its container isn’t visible.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: row;
justify-content: center;
align-items: center;
padding: 0px;

width: 48px;
height: 48px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Content */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
padding: 0px;

width: 40px;
height: 40px;

/* M3/black */
background: #000000;
border-radius: 8px;

/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* State-layer */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
justify-content: center;
align-items: center;
padding: 0px;
isolation: isolate;

width: 40px;
height: 40px;

/* M3/state-layers/light/onPrimary/opacity-0.08 */
background: rgba(255, 255, 255, 0.08);

/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Ripple */

position: absolute;
width: 38px;
height: 28px;
right: 0px;
bottom: 0px;

/* M3/state-layers/light/onPrimary/opacity-0.10 */
background: rgba(255, 255, 255, 0.1);

/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;
z-index: 0;


/* Icon */

width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 0;
z-index: 1;


/* icon */

position: absolute;
left: 8.12%;
right: 8.13%;
top: 8.33%;
bottom: 8.33%;

/* M3/sys/light/on-primary */
background: #FFFFFF;


/* Menu

<p>Menus display a list of choices on a temporary surface. They appear when users interact with a button, action, or other control.</p><p><br></p><p>🛠 Additional options</p><p>Menu list item - can be edited by selecting individual list item and selecting wether it is enabled, selected, and has a divider from the variant properties.</p>

Menu: 0 Density 
Menus display a list of choices on a temporary surface. They appear when users interact with a button, action, or other control.

🛠 Additional options 
Menu list item - can be edited by selecting individual list item and  selecting wether it is enabled, selected, and has a divider from the variant properties.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: flex-start;
padding: 8px 0px;

width: 200px;
min-width: 112px;
max-width: 280px;
height: 240px;

/* M3/sys/light/surface-container */
background: #F3EDF7;
/* M3/Elevation Light/2 */
box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.3), 0px 2px 6px 2px rgba(0, 0, 0, 0.15);
border-radius: 4px;

/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 0;


/* Menu list */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 200px;
height: 224px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 1;


/* Menu list item 1 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* state-layer */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 8px 12px;
gap: 12px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Leading element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Content */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 176px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 1;


/* Label text */

width: 176px;
height: 24px;

/* M3/body/large */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 16px;
line-height: 24px;
/* 상자 높이와 동일 또는 150% */
display: flex;
align-items: center;
letter-spacing: 0.5px;

/* M3/sys/light/on-surface */
color: #1D1B20;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Supporting text */

display: none;
width: 104px;
height: 20px;

/* M3/body/medium */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 14px;
line-height: 20px;
/* 상자 높이와 동일 또는 143% */
letter-spacing: 0.25px;

color: #49454F;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Trailing element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 2;
flex-grow: 0;


/* Divider

Dividers are one way to visually group components and create hierarchy. They can also be used to imply nested parent/child relationships.

Use full width dividers to separate larger sections of unrelated content. They can be used directly on a surface or inside other components like cards or lists.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: column;
justify-content: center;
align-items: flex-start;
padding: 8px 0px;

display: none;
width: 200px;
height: 17px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Menu list item 2 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* state-layer */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 8px 12px;
gap: 12px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Leading element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Content */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 176px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 1;


/* Label text */

width: 176px;
height: 24px;

/* M3/body/large */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 16px;
line-height: 24px;
/* 상자 높이와 동일 또는 150% */
display: flex;
align-items: center;
letter-spacing: 0.5px;

/* M3/sys/light/on-surface */
color: #1D1B20;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Supporting text */

display: none;
width: 104px;
height: 20px;

/* M3/body/medium */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 14px;
line-height: 20px;
/* 상자 높이와 동일 또는 143% */
letter-spacing: 0.25px;

color: #49454F;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Trailing element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 2;
flex-grow: 0;


/* Divider

Dividers are one way to visually group components and create hierarchy. They can also be used to imply nested parent/child relationships.

Use full width dividers to separate larger sections of unrelated content. They can be used directly on a surface or inside other components like cards or lists.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: column;
justify-content: center;
align-items: flex-start;
padding: 8px 0px;

display: none;
width: 200px;
height: 17px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Menu list item 3 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 2;
align-self: stretch;
flex-grow: 0;


/* state-layer */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 8px 12px;
gap: 12px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Leading element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Content */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 176px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 1;


/* Label text */

width: 176px;
height: 24px;

/* M3/body/large */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 16px;
line-height: 24px;
/* 상자 높이와 동일 또는 150% */
display: flex;
align-items: center;
letter-spacing: 0.5px;

/* M3/sys/light/on-surface */
color: #1D1B20;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Supporting text */

display: none;
width: 104px;
height: 20px;

/* M3/body/medium */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 14px;
line-height: 20px;
/* 상자 높이와 동일 또는 143% */
letter-spacing: 0.25px;

color: #49454F;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Trailing element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 2;
flex-grow: 0;


/* Divider

Dividers are one way to visually group components and create hierarchy. They can also be used to imply nested parent/child relationships.

Use full width dividers to separate larger sections of unrelated content. They can be used directly on a surface or inside other components like cards or lists.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: column;
justify-content: center;
align-items: flex-start;
padding: 8px 0px;

display: none;
width: 200px;
height: 17px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Menu list item 4 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 3;
align-self: stretch;
flex-grow: 0;


/* state-layer */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 8px 12px;
gap: 12px;

width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Leading element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Content */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

width: 176px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 1;


/* Label text */

width: 176px;
height: 24px;

/* M3/body/large */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 16px;
line-height: 24px;
/* 상자 높이와 동일 또는 150% */
display: flex;
align-items: center;
letter-spacing: 0.5px;

/* M3/sys/light/on-surface */
color: #1D1B20;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
align-self: stretch;
flex-grow: 0;


/* Supporting text */

display: none;
width: 104px;
height: 20px;

/* M3/body/medium */
font-family: 'Roboto';
font-style: normal;
font-weight: 400;
font-size: 14px;
line-height: 20px;
/* 상자 높이와 동일 또는 143% */
letter-spacing: 0.25px;

color: #49454F;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Trailing element */

display: none;
width: 24px;
height: 24px;


/* 내부 오토레이아웃 */
flex: none;
order: 2;
flex-grow: 0;


/* Divider

Dividers are one way to visually group components and create hierarchy. They can also be used to imply nested parent/child relationships.

Use full width dividers to separate larger sections of unrelated content. They can be used directly on a surface or inside other components like cards or lists.
*/

/* 오토레이아웃 */
display: flex;
flex-direction: column;
justify-content: center;
align-items: flex-start;
padding: 8px 0px;

display: none;
width: 200px;
height: 17px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Menu list item 5 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 4;
align-self: stretch;
flex-grow: 0;


/* Menu list item 6 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 5;
align-self: stretch;
flex-grow: 0;


/* Menu list item 7 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 6;
align-self: stretch;
flex-grow: 0;


/* Menu list item 8 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 7;
align-self: stretch;
flex-grow: 0;


/* Menu list item 9 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 8;
align-self: stretch;
flex-grow: 0;


/* Menu list item 10 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 9;
align-self: stretch;
flex-grow: 0;


/* Menu list item 11 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 10;
align-self: stretch;
flex-grow: 0;


/* Menu list item 12 */

/* 오토레이아웃 */
display: flex;
flex-direction: column;
align-items: flex-start;
padding: 0px;

display: none;
width: 200px;
height: 56px;


/* 내부 오토레이아웃 */
flex: none;
order: 11;
align-self: stretch;
flex-grow: 0;


/* Scrollbar */

display: none;
width: 12px;
height: 672px;


/* 내부 오토레이아웃 */
flex: none;
order: 1;
align-self: stretch;
flex-grow: 0;


/* Sidebar Search Field */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 0px;

position: relative;
width: 656px;
height: 44px;

border-radius: 100px;


/* Search Field */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 11px;

width: 656px;
height: 44px;

background: rgba(120, 120, 128, 0.16);
mix-blend-mode: plus-darker;
border-radius: 100px;

/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 1;


/* Frame */

/* 오토레이아웃 */
display: flex;
flex-direction: row;
align-items: center;
padding: 0px;
gap: 8px;

width: 617px;
height: 22px;


/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 1;


/* 􀊫 */

width: 21px;
height: 22px;

font-family: 'SF Pro';
font-style: normal;
font-weight: 400;
font-size: 17px;
line-height: 22px;
/* 상자 높이와 동일 또는 129% */
letter-spacing: -0.08px;

color: #999999;

mix-blend-mode: plus-darker;

/* 내부 오토레이아웃 */
flex: none;
order: 0;
flex-grow: 0;


/* Search */

width: 56px;
height: 22px;

font-family: 'SF Pro';
font-style: normal;
font-weight: 400;
font-size: 17px;
line-height: 22px;
/* 상자 높이와 동일 또는 129% */
letter-spacing: -0.08px;

color: #999999;

mix-blend-mode: plus-darker;

/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 0;


/* 􀊱 */

width: 17px;
height: 22px;

font-family: 'SF Pro';
font-style: normal;
font-weight: 400;
font-size: 17px;
line-height: 22px;
/* 상자 높이와 동일 또는 129% */
letter-spacing: -0.08px;

color: #999999;

mix-blend-mode: plus-darker;

/* 내부 오토레이아웃 */
flex: none;
order: 1;
flex-grow: 0;
